name: CI (DB)

on:
  push:
  pull_request:

jobs:
  test-mysql:
    name: php-${{ matrix.php }} • mysql
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3']
    services:
      mysql:
        image: mysql:8.0
        ports: ['3306:3306']
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval=10s --health-timeout=5s --health-retries=20

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo_mysql
          tools: composer

      - name: Composer install (with cache)
        uses: ramsey/composer-install@v3
        with:
          composer-options: --no-interaction --prefer-dist

      - name: Split schema to packages (MySQL)
        shell: pwsh
        run: |
          pwsh ./scripts/Split-SchemaToPackages.ps1 -PackagesDir ./packages

      - name: List detected schema maps (debug)
        shell: pwsh
        run: |
          Get-ChildItem -LiteralPath ./scripts/schema -Filter 'schema-map-*.psd1' -File |
            Select-Object Name,FullName

      - name: Validate codegen (WhatIf, autodetect)
        shell: pwsh
        run: |
          pwsh -File ./scripts/Generate-PhpFromSchema.ps1 `
            -TemplatesRoot ./scripts/templates/php `
            -ModulesRoot   ./packages `
            -SchemaDir     ./scripts/schema `
            -EnginePreference auto `
            -StrictSubmodules `
            -WhatIf

      - name: Generate code (real) and assert clean git
        shell: pwsh
        run: |
          pwsh -File ./scripts/Generate-PhpFromSchema.ps1 `
            -TemplatesRoot ./scripts/templates/php `
            -ModulesRoot   ./packages `
            -SchemaDir     ./scripts/schema `
            -EnginePreference auto `
            -StrictSubmodules `
            -Force
          $st = git status --porcelain
          if ($st) {
            Write-Host "Repository not clean after codegen:`n$st" -ForegroundColor Red
            Write-Host "Please commit generated PHP files locally." -ForegroundColor Red
            exit 1
          }

      - name: PHP lint
        run: |
          find . -type f -name "*.php" -print0 | xargs -0 -n1 -P4 php -l

      - name: Run DB integration (MySQL) — pass 1 (install/upgrade)
        env:
          BC_DB: mysql
          MYSQL_DSN: "mysql:host=127.0.0.1;port=3306;dbname=test;charset=utf8mb4"
          MYSQL_USER: "root"
          MYSQL_PASS: "root"
          BC_RUN_IDEMPOTENT: "0"
          BC_UNINSTALL: "0"
        run: php ./tests/ci/run.php

      - name: Run DB integration (MySQL) — pass 2 (idempotence)
        env:
          BC_DB: mysql
          MYSQL_DSN: "mysql:host=127.0.0.1;port=3306;dbname=test;charset=utf8mb4"
          MYSQL_USER: "root"
          MYSQL_PASS: "root"
          BC_RUN_IDEMPOTENT: "1"
          BC_UNINSTALL: "0"
        run: php ./tests/ci/run.php
      - name: Behavior smoke tests (${{ matrix.php }} • ${{ matrix.db || 'mysql' }})
        env:
          BC_DB: mysql           # nebo postgres v druhém jobu
          MYSQL_DSN: "mysql:host=127.0.0.1;port=3306;dbname=test;charset=utf8mb4"
          MYSQL_USER: "root"
          MYSQL_PASS: "root"
          PG_DSN: "pgsql:host=127.0.0.1;port=5432;dbname=test"
          PG_USER: "postgres"
          PG_PASS: "postgres"
        run: php ./tests/ci/behavior.php
      - name: Run DB integration (MySQL) — uninstall smoke test
        env:
          BC_DB: mysql
          MYSQL_DSN: "mysql:host=127.0.0.1;port=3306;dbname=test;charset=utf8mb4"
          MYSQL_USER: "root"
          MYSQL_PASS: "root"
          BC_RUN_IDEMPOTENT: "0"
          BC_UNINSTALL: "1"
        run: php ./tests/ci/run.php

  test-postgres:
    name: php-${{ matrix.php }} • postgres
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3']
    services:
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=20

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo_pgsql
          tools: composer

      - name: Composer install (with cache)
        uses: ramsey/composer-install@v3
        with:
          composer-options: --no-interaction --prefer-dist

      - name: List detected schema maps (debug)
        shell: pwsh
        run: |
          Get-ChildItem -LiteralPath ./scripts/schema -Filter 'schema-map-*.psd1' -File |
            Select-Object Name,FullName

      - name: Split schema to packages
        shell: pwsh
        run: |
          pwsh ./scripts/Split-SchemaToPackages.ps1 -PackagesDir ./packages
      - name: Validate codegen (WhatIf, autodetect)
        shell: pwsh
        run: |
          pwsh -File ./scripts/Generate-PhpFromSchema.ps1 `
            -TemplatesRoot ./scripts/templates/php `
            -ModulesRoot   ./packages `
            -SchemaDir     ./scripts/schema `
            -EnginePreference auto `
            -StrictSubmodules `
            -WhatIf

      - name: Generate code (real) and assert clean git
        shell: pwsh
        run: |
          pwsh -File ./scripts/Generate-PhpFromSchema.ps1 `
            -TemplatesRoot ./scripts/templates/php `
            -ModulesRoot   ./packages `
            -SchemaDir     ./scripts/schema `
            -EnginePreference auto `
            -StrictSubmodules `
            -Force
          $st = git status --porcelain
          if ($st) {
            Write-Host "Repository not clean after codegen:`n$st" -ForegroundColor Red
            Write-Host "Please commit generated PHP files locally." -ForegroundColor Red
            exit 1
          }

      - name: PHP lint
        run: |
          find . -type f -name "*.php" -print0 | xargs -0 -n1 -P4 php -l

      - name: Run DB integration (Postgres) — pass 1 (install/upgrade)
        env:
          BC_DB: postgres
          PG_DSN: "pgsql:host=127.0.0.1;port=5432;dbname=test"
          PG_USER: "postgres"
          PG_PASS: "postgres"
          BC_RUN_IDEMPOTENT: "0"
          BC_UNINSTALL: "0"
        run: php ./tests/ci/run.php

      - name: Run DB integration (Postgres) — pass 2 (idempotence)
        env:
          BC_DB: postgres
          PG_DSN: "pgsql:host=127.0.0.1;port=5432;dbname=test"
          PG_USER: "postgres"
          PG_PASS: "postgres"
          BC_RUN_IDEMPOTENT: "1"
          BC_UNINSTALL: "0"
        run: php ./tests/ci/run.php
      - name: Behavior smoke tests (${{ matrix.php }} • ${{ matrix.db || 'pgsql' }})
        env:
          BC_DB: postgres           # nebo postgres v druhém jobu
          MYSQL_DSN: "mysql:host=127.0.0.1;port=3306;dbname=test;charset=utf8mb4"
          MYSQL_USER: "root"
          MYSQL_PASS: "root"
          PG_DSN: "pgsql:host=127.0.0.1;port=5432;dbname=test"
          PG_USER: "postgres"
          PG_PASS: "postgres"
        run: php ./tests/ci/behavior.php
      - name: Run DB integration (Postgres) — uninstall smoke test
        env:
          BC_DB: postgres
          PG_DSN: "pgsql:host=127.0.0.1;port=5432;dbname=test"
          PG_USER: "postgres"
          PG_PASS: "postgres"
          BC_UNINSTALL: "1"
          BC_RUN_IDEMPOTENT: "0"
        run: php ./tests/ci/run.php